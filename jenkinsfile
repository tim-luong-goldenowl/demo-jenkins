pipeline {
    agent none

    environment {
        DOCKER_IMAGE = "thailuong/sample-node"
        DOCKER_TAG="${GIT_BRANCH.tokenize('/').pop()}-${GIT_COMMIT.substring(0,7)}"
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        DOCKER_IMAGE_NAME_AND_TAG = "${DOCKER_IMAGE}:${DOCKER_TAG}"
    }

    stages {
        // stage('Unit Test') {
        //     agent {
        //         docker {
        //             image 'node:lts-bullseye-slim'
        //             args '-u 0:0 -v /tmp:/root/.cache'
        //         }
        //     }

        //     steps {
        //         sh 'npm install'
        //         sh 'npm test'
        //     }
        // }

        stage("Docker Build Iamge") {
            agent any

            steps {
                sh "docker build -t ${DOCKER_IMAGE_NAME_AND_TAG} . "
                sh "docker image ls | grep ${DOCKER_IMAGE}"
                withCredentials([usernamePassword(credentialsId: 'docker hub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh 'echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin'
                    sh "docker push ${DOCKER_IMAGE_NAME_AND_TAG}"
                }

                //clean to save disk
                sh "docker image rm ${DOCKER_IMAGE_NAME_AND_TAG}"
            }
        }

        stage('Terraform Deploy') {
           agent {
                docker {
                    image 'hashicorp/terraform:1.4'
                    args  '--entrypoint="" -v /Users/goldenowl/Documents/jenkins/data/workspace/sample_node/:/workpace -w /workpace -e TF_VAR_IMAGE_NAME=${DOCKER_IMAGE_NAME_AND_TAG} -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}'
                }
            }

            stages {
                stage('terraform init') {
                    steps{
                        sh 'terraform init'
                    }
                }

                stage('terraform apply') {
                    steps{
                        sh 'terraform apply -auto-approve'
                    }
                }
            }
        }
    }
}